[tox]
envlist = py27,py35,pypy,pep8,releasenotes
minversion = 2.0
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
    DISCOVER_DIRECTORY=saharaclient/tests/unit
deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands = find . -type f -name "*.pyc" -delete
           ostestr {posargs}
whitelist_externals = find
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:debug]
commands = oslo_debug_helper -t saharaclient/tests/unit {posargs}

[testenv:debug-py27]
basepython = python2.7
commands = oslo_debug_helper -t saharaclient/tests/unit {posargs}

[testenv:debug-py34]
basepython = python3.4
commands = oslo_debug_helper -t saharaclient/tests/unit {posargs}

[testenv:cover]
commands =
    python setup.py test --coverage --testr-args='{posargs}'
    coverage report

[tox:jenkins]
sitepackages = False

[testenv:pep8]
sitepackages = False
commands = flake8

[testenv:doc8]
deps =
    -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    doc8
commands = doc8 doc/source

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands =
    rm -rf doc/html doc/build
    python setup.py build_sphinx
whitelist_externals =
    rm

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
show-source = true
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,tools

[hacking]
local-check-factory = saharaclient.tests.hacking.checks.factory
